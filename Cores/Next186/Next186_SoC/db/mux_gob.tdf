--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=2 LPM_WIDTH=32 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 17.1 cbx_lpm_mux 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 32 
SUBDESIGN mux_gob
( 
	data[63..0]	:	input;
	result[31..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[31..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data1124w[1..0]	: WIRE;
	w_data1138w[1..0]	: WIRE;
	w_data1150w[1..0]	: WIRE;
	w_data1162w[1..0]	: WIRE;
	w_data1174w[1..0]	: WIRE;
	w_data1186w[1..0]	: WIRE;
	w_data1198w[1..0]	: WIRE;
	w_data1210w[1..0]	: WIRE;
	w_data1222w[1..0]	: WIRE;
	w_data1234w[1..0]	: WIRE;
	w_data1246w[1..0]	: WIRE;
	w_data1258w[1..0]	: WIRE;
	w_data1270w[1..0]	: WIRE;
	w_data1282w[1..0]	: WIRE;
	w_data1294w[1..0]	: WIRE;
	w_data1306w[1..0]	: WIRE;
	w_data1318w[1..0]	: WIRE;
	w_data1330w[1..0]	: WIRE;
	w_data1342w[1..0]	: WIRE;
	w_data1354w[1..0]	: WIRE;
	w_data1366w[1..0]	: WIRE;
	w_data1378w[1..0]	: WIRE;
	w_data1390w[1..0]	: WIRE;
	w_data1402w[1..0]	: WIRE;
	w_data1414w[1..0]	: WIRE;
	w_data1426w[1..0]	: WIRE;
	w_data1438w[1..0]	: WIRE;
	w_data1450w[1..0]	: WIRE;
	w_data1462w[1..0]	: WIRE;
	w_data1474w[1..0]	: WIRE;
	w_data1486w[1..0]	: WIRE;
	w_data1498w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data1498w[1..1]) # ((! sel_node[]) & w_data1498w[0..0])), ((sel_node[] & w_data1486w[1..1]) # ((! sel_node[]) & w_data1486w[0..0])), ((sel_node[] & w_data1474w[1..1]) # ((! sel_node[]) & w_data1474w[0..0])), ((sel_node[] & w_data1462w[1..1]) # ((! sel_node[]) & w_data1462w[0..0])), ((sel_node[] & w_data1450w[1..1]) # ((! sel_node[]) & w_data1450w[0..0])), ((sel_node[] & w_data1438w[1..1]) # ((! sel_node[]) & w_data1438w[0..0])), ((sel_node[] & w_data1426w[1..1]) # ((! sel_node[]) & w_data1426w[0..0])), ((sel_node[] & w_data1414w[1..1]) # ((! sel_node[]) & w_data1414w[0..0])), ((sel_node[] & w_data1402w[1..1]) # ((! sel_node[]) & w_data1402w[0..0])), ((sel_node[] & w_data1390w[1..1]) # ((! sel_node[]) & w_data1390w[0..0])), ((sel_node[] & w_data1378w[1..1]) # ((! sel_node[]) & w_data1378w[0..0])), ((sel_node[] & w_data1366w[1..1]) # ((! sel_node[]) & w_data1366w[0..0])), ((sel_node[] & w_data1354w[1..1]) # ((! sel_node[]) & w_data1354w[0..0])), ((sel_node[] & w_data1342w[1..1]) # ((! sel_node[]) & w_data1342w[0..0])), ((sel_node[] & w_data1330w[1..1]) # ((! sel_node[]) & w_data1330w[0..0])), ((sel_node[] & w_data1318w[1..1]) # ((! sel_node[]) & w_data1318w[0..0])), ((sel_node[] & w_data1306w[1..1]) # ((! sel_node[]) & w_data1306w[0..0])), ((sel_node[] & w_data1294w[1..1]) # ((! sel_node[]) & w_data1294w[0..0])), ((sel_node[] & w_data1282w[1..1]) # ((! sel_node[]) & w_data1282w[0..0])), ((sel_node[] & w_data1270w[1..1]) # ((! sel_node[]) & w_data1270w[0..0])), ((sel_node[] & w_data1258w[1..1]) # ((! sel_node[]) & w_data1258w[0..0])), ((sel_node[] & w_data1246w[1..1]) # ((! sel_node[]) & w_data1246w[0..0])), ((sel_node[] & w_data1234w[1..1]) # ((! sel_node[]) & w_data1234w[0..0])), ((sel_node[] & w_data1222w[1..1]) # ((! sel_node[]) & w_data1222w[0..0])), ((sel_node[] & w_data1210w[1..1]) # ((! sel_node[]) & w_data1210w[0..0])), ((sel_node[] & w_data1198w[1..1]) # ((! sel_node[]) & w_data1198w[0..0])), ((sel_node[] & w_data1186w[1..1]) # ((! sel_node[]) & w_data1186w[0..0])), ((sel_node[] & w_data1174w[1..1]) # ((! sel_node[]) & w_data1174w[0..0])), ((sel_node[] & w_data1162w[1..1]) # ((! sel_node[]) & w_data1162w[0..0])), ((sel_node[] & w_data1150w[1..1]) # ((! sel_node[]) & w_data1150w[0..0])), ((sel_node[] & w_data1138w[1..1]) # ((! sel_node[]) & w_data1138w[0..0])), ((sel_node[] & w_data1124w[1..1]) # ((! sel_node[]) & w_data1124w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data1124w[] = ( data[32..32], data[0..0]);
	w_data1138w[] = ( data[33..33], data[1..1]);
	w_data1150w[] = ( data[34..34], data[2..2]);
	w_data1162w[] = ( data[35..35], data[3..3]);
	w_data1174w[] = ( data[36..36], data[4..4]);
	w_data1186w[] = ( data[37..37], data[5..5]);
	w_data1198w[] = ( data[38..38], data[6..6]);
	w_data1210w[] = ( data[39..39], data[7..7]);
	w_data1222w[] = ( data[40..40], data[8..8]);
	w_data1234w[] = ( data[41..41], data[9..9]);
	w_data1246w[] = ( data[42..42], data[10..10]);
	w_data1258w[] = ( data[43..43], data[11..11]);
	w_data1270w[] = ( data[44..44], data[12..12]);
	w_data1282w[] = ( data[45..45], data[13..13]);
	w_data1294w[] = ( data[46..46], data[14..14]);
	w_data1306w[] = ( data[47..47], data[15..15]);
	w_data1318w[] = ( data[48..48], data[16..16]);
	w_data1330w[] = ( data[49..49], data[17..17]);
	w_data1342w[] = ( data[50..50], data[18..18]);
	w_data1354w[] = ( data[51..51], data[19..19]);
	w_data1366w[] = ( data[52..52], data[20..20]);
	w_data1378w[] = ( data[53..53], data[21..21]);
	w_data1390w[] = ( data[54..54], data[22..22]);
	w_data1402w[] = ( data[55..55], data[23..23]);
	w_data1414w[] = ( data[56..56], data[24..24]);
	w_data1426w[] = ( data[57..57], data[25..25]);
	w_data1438w[] = ( data[58..58], data[26..26]);
	w_data1450w[] = ( data[59..59], data[27..27]);
	w_data1462w[] = ( data[60..60], data[28..28]);
	w_data1474w[] = ( data[61..61], data[29..29]);
	w_data1486w[] = ( data[62..62], data[30..30]);
	w_data1498w[] = ( data[63..63], data[31..31]);
END;
--VALID FILE
